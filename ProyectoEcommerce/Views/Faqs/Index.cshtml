@model IEnumerable<ProyectoEcommerce.Models.Faq>
@{
    ViewData["Title"] = "Preguntas frecuentes — Admin";
    var cats = Model.Select(m => m.Category).Where(c => !string.IsNullOrWhiteSpace(c)).Distinct().OrderBy(c => c).ToList();
}

<section class="container py-3">
    <div class="d-flex align-items-center justify-content-between flex-wrap gap-2 mb-3">
        <h1 class="h3 m-0">Preguntas frecuentes <small class="text-muted">(Admin)</small></h1>
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-lg"></i> Crear nueva
        </a>
    </div>

    <!-- Filtros -->
    <div class="row g-2 mb-3">
        <div class="col-sm-6">
            <div class="input-group">
                <span class="input-group-text" id="lblSearch">Buscar</span>
                <input id="txtSearch" type="search" class="form-control" placeholder="Pregunta o respuesta..." aria-labelledby="lblSearch" />
            </div>
        </div>
        <div class="col-sm-4">
            <select id="selCat" class="form-select" aria-label="Filtrar por categoría">
                <option value="">Todas las categorías</option>
                @foreach (var c in cats)
                {
                    <option value="@c">@c</option>
                }
            </select>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info mb-0">
            No hay FAQs todavía. Usa <a asp-action="Create">crear nueva</a>.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table align-middle" id="tblFaq">
                <thead class="table-light">
                    <tr>
                        <th style="width:14rem">Categoría</th>
                        <th style="width:28rem">Pregunta</th>
                        <th>Respuesta</th>
                        <th class="text-nowrap" style="width:6rem">Orden</th>
                        <th class="text-nowrap" style="width:6rem">Activa</th>
                        <th class="text-end" style="width:12rem">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr data-cat="@item.Category?.Trim()" class="faq-row">
                            <td class="text-muted">@item.Category</td>
                            <td>@item.Question</td>
                            <td>
                                <div class="text-truncate-2">@item.Answer</div>
                            </td>
                            <td>@item.SortOrder</td>
                            <td>
                                @if (item.IsActive)
                                {
                                    <span class="badge bg-success">Sí</span>
                                }
                                else
                                {

                                    <span class="badge bg-secondary">No</span>
                                }
                            </td>
                            <td class="text-end">
                                <div class="btn-group btn-group-sm" role="group">
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-primary">Editar</a>
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-secondary">Ver</a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">Borrar</a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div id="noMatches" class="alert alert-warning d-none">
            No hay resultados con esos filtros.
        </div>
    }

</section>

@section Styles {
    <style>
        /* 2 líneas con ellipsis para respuestas largas */
        .text-truncate-2{
          display:-webkit-box; -webkit-line-clamp:2; -webkit-box-orient:vertical;
          overflow:hidden;
        }
    </style>
}

@section Scripts {
    <script>
        (function(){
          const q = document.getElementById('txtSearch');
          const sel = document.getElementById('selCat');
          const rows = Array.from(document.querySelectorAll('#tblFaq tbody tr.faq-row'));
          const noMatches = document.getElementById('noMatches');

          function norm(s){ return (s||'').toString().toLowerCase(); }
          function match(row){
            const cat = norm(row.dataset.cat);
            const text = norm(row.innerText);
            const qv = norm(q.value);
            const cv = norm(sel.value);
            const okCat = !cv || cat === cv;
            const okText = !qv || text.includes(qv);
            return okCat && okText;
          }

          function apply(){
            let visible = 0;
            rows.forEach(r=>{
              const show = match(r);
              r.style.display = show ? '' : 'none';
              if (show) visible++;
            });
            noMatches.classList.toggle('d-none', visible !== 0);
          }

          q?.addEventListener('input', apply);
          sel?.addEventListener('change', apply);
          apply(); // inicial
        })();
    </script>
}
